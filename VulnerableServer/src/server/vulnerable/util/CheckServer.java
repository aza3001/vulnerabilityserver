package server.vulnerable.util;

import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.JTextArea;

public class CheckServer implements Runnable{
	private ServerSocket server = null;
	private Socket socket = null;
	private int port = 0;
	private JTextArea textArea = null;
	
	private ObjectInputStream in = null;
	private ObjectOutputStream out = null;
	
	public CheckServer (int port, JTextArea textArea) {
		this.port = port;
		this.textArea = textArea;
	}
	
	public void stopThread() {
		try {
			if (in != null)
				in.close();
			if (out != null)
				out.close();
			if (socket != null)
				socket.close();
			if (server != null)
				server.close();
			
			} catch (Exception e) {
			
		}
	}
	
	@Override
	public void run() {
		// TODO Auto-generated method stub
		try {
			String read = "";
			String write = "Yes";
			server = new ServerSocket(port);
			
			textArea.append( "[" + currentTime() + "] " + "Check Port is opened.. \n");
			
			while (true) {
				socket = null;
				socket = server.accept();
				
				in = new ObjectInputStream( socket.getInputStream() );
				read = (String) in.readObject();
				
				if (read.equalsIgnoreCase("Working?")) {
					out = new ObjectOutputStream( socket.getOutputStream() );
					out.writeObject( write );
					out.flush();
				}
				
				in.close();
				out.close();
				socket.close();
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				server.close();
			} catch (Exception e1) {
				e1.printStackTrace();
			}
		}
	}
	
	private String currentTime() {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
		Date date = new Date();
		return sdf.format(date);
	}
}
